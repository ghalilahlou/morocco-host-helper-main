-- üîç V√©rification de l'utilisateur liloulalou961@gmail.com
-- Ex√©cutez ce script dans l'√©diteur SQL de Supabase

-- 1. V√©rifier si l'utilisateur existe
SELECT 
    '1. V√âRIFICATION EXISTENCE UTILISATEUR' as section,
    id,
    email,
    email_confirmed_at,
    created_at,
    last_sign_in_at,
    CASE
        WHEN email_confirmed_at IS NOT NULL THEN '‚úÖ Confirm√©'
        ELSE '‚ùå Non confirm√©'
    END as status
FROM auth.users
WHERE email = 'liloulalou961@gmail.com';

-- 2. V√©rifier tous les utilisateurs r√©cents pour comparaison
SELECT 
    '2. TOUS LES UTILISATEURS R√âCENTS' as section,
    id,
    email,
    email_confirmed_at,
    created_at,
    last_sign_in_at,
    CASE
        WHEN email_confirmed_at IS NOT NULL THEN '‚úÖ Confirm√©'
        ELSE '‚ùå Non confirm√©'
    END as status
FROM auth.users
ORDER BY created_at DESC
LIMIT 10;

-- 3. V√©rifier les utilisateurs non confirm√©s
SELECT 
    '3. UTILISATEURS NON CONFIRM√âS' as section,
    id,
    email,
    created_at,
    last_sign_in_at
FROM auth.users
WHERE email_confirmed_at IS NULL
ORDER BY created_at DESC;

-- 4. Compter le nombre total d'utilisateurs
SELECT 
    '4. STATISTIQUES UTILISATEURS' as section,
    'Total utilisateurs' as metric,
    COUNT(*) as value
FROM auth.users
UNION ALL
SELECT 
    '4. STATISTIQUES UTILISATEURS' as section,
    'Utilisateurs confirm√©s' as metric,
    COUNT(*) as value
FROM auth.users
WHERE email_confirmed_at IS NOT NULL
UNION ALL
SELECT 
    '4. STATISTIQUES UTILISATEURS' as section,
    'Utilisateurs non confirm√©s' as metric,
    COUNT(*) as value
FROM auth.users
WHERE email_confirmed_at IS NULL;

-- 5. V√©rifier les logs d'audit pour cet utilisateur
SELECT 
    '5. LOGS D\'AUDIT POUR L\'UTILISATEUR' as section,
    id,
    user_id,
    event_type,
    ip_address,
    created_at
FROM auth.audit_log_entries
WHERE user_id IN (
    SELECT id FROM auth.users WHERE email = 'liloulalou961@gmail.com'
)
ORDER BY created_at DESC
LIMIT 10;

-- 6. V√©rifier les tentatives d'envoi d'email
SELECT 
    '6. TENTATIVES D\'ENVOI D\'EMAIL' as section,
    id,
    user_id,
    email,
    type,
    created_at,
    confirmed_at,
    expires_at
FROM auth.email_templates
WHERE email = 'liloulalou961@gmail.com'
ORDER BY created_at DESC
LIMIT 10;

-- 7. R√©sum√© de la v√©rification
SELECT 
    '7. R√âSUM√â DE LA V√âRIFICATION' as section,
    CASE 
        WHEN EXISTS (SELECT 1 FROM auth.users WHERE email = 'liloulalou961@gmail.com') THEN '‚úÖ Utilisateur trouv√©'
        ELSE '‚ùå Utilisateur non trouv√©'
    END as existence,
    CASE 
        WHEN EXISTS (SELECT 1 FROM auth.users WHERE email = 'liloulalou961@gmail.com' AND email_confirmed_at IS NOT NULL) THEN '‚úÖ Email confirm√©'
        WHEN EXISTS (SELECT 1 FROM auth.users WHERE email = 'liloulalou961@gmail.com' AND email_confirmed_at IS NULL) THEN '‚ùå Email non confirm√©'
        ELSE '‚ùì Statut inconnu'
    END as confirmation_status,
    now() as verified_at;

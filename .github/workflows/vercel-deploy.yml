name: Deploy to Vercel

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run type check
      run: npm run typecheck

    - name: Run linting
      run: npm run lint

    - name: Build application
      run: npm run vercel-build
      env:
        VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
        VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}
        VITE_OPENAI_API_KEY: ${{ secrets.VITE_OPENAI_API_KEY }}
        VITE_RESEND_API_KEY: ${{ secrets.VITE_RESEND_API_KEY }}
        VITE_RESEND_FROM_EMAIL: ${{ secrets.VITE_RESEND_FROM_EMAIL }}

    - name: Deploy to Vercel
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        working-directory: ./
        vercel-args: '--prod'
        scope: ${{ secrets.VERCEL_ORG_ID }}

    - name: Comment PR with deployment URL
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const { data: comments } = await github.rest.issues.listComments({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.issue.number,
          });
          
          const botComment = comments.find(comment => 
            comment.user.type === 'Bot' && comment.body.includes('Vercel deployment')
          );
          
          if (botComment) {
            await github.rest.issues.updateComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: botComment.id,
              body: `## ðŸš€ Vercel Deployment
              
              **Preview URL**: ${{ steps.deploy.outputs.preview-url }}
              **Production URL**: ${{ steps.deploy.outputs.production-url }}
              
              ### ðŸ“‹ Deployment Details
              - **Branch**: ${{ github.ref_name }}
              - **Commit**: ${{ github.sha }}
              - **Status**: âœ… Deployed successfully
              
              ### ðŸ”— Edge Functions
              - **Health Check**: https://your-supabase-project.supabase.co/functions/v1/health
              - **Sync Documents**: https://your-supabase-project.supabase.co/functions/v1/sync-documents`
            });
          } else {
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: `## ðŸš€ Vercel Deployment
              
              **Preview URL**: ${{ steps.deploy.outputs.preview-url }}
              **Production URL**: ${{ steps.deploy.outputs.production-url }}
              
              ### ðŸ“‹ Deployment Details
              - **Branch**: ${{ github.ref_name }}
              - **Commit**: ${{ github.sha }}
              - **Status**: âœ… Deployed successfully
              
              ### ðŸ”— Edge Functions
              - **Health Check**: https://your-supabase-project.supabase.co/functions/v1/health
              - **Sync Documents**: https://your-supabase-project.supabase.co/functions/v1/sync-documents`
            });
          }

